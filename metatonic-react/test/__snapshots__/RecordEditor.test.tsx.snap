// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RecordEditor renders correctly with default/blank data 1`] = `
<div
  className="edit-Record edit-Home undefined-field"
>
  <fieldset
    className="field-set-field-container contain-Record contain-Person owners-field"
  >
    <legend
      className="label-Record label-Person owners-field"
      id="f0-label"
    >
      Owners
    </legend>
    <div
      className="data-grid edit-Record edit-Person owners-field"
    >
      <div
        className="data-grid-buttons"
      />
      <table>
        <thead>
          <tr>
            <th>
              Full Name
            </th>
            <th>
              Phone Number
            </th>
            <th>
              <button
                className=""
                onClick={[Function]}
                type="button"
              >
                Add 
                Person
              </button>
            </th>
          </tr>
        </thead>
        <tbody />
        <tfoot>
          <tr>
            <th />
            <th />
            <th>
              <button
                className=""
                onClick={[Function]}
                type="button"
              >
                Add 
                Person
              </button>
            </th>
          </tr>
        </tfoot>
      </table>
    </div>
    <div
      className="validation-list"
    >
      <div />
    </div>
  </fieldset>
  <fieldset
    className="field-set-field-container contain-Record contain-Address address-field"
  >
    <legend
      className="label-Record label-Address address-field"
      id="f1-label"
    >
      Address
    </legend>
    <div
      className="edit-Record edit-Address address-field"
    >
      <div
        className="input-box-field-container contain-text address1-field"
      >
        <label
          className="label-text address1-field"
          htmlFor="f1f0"
          id="f1f0-label"
        >
          Address 1
        </label>
        <input
          className="input-text address1-field"
          data-fieldName="address1"
          id="f1f0"
          maxLength={undefined}
          name="address.address1"
          onChange={[Function]}
          required={undefined}
          size={20}
          type="text"
          value=""
        />
        <div
          className="validation-list"
        >
          <div />
        </div>
      </div>
      <div
        className="input-box-field-container contain-text address2-field"
      >
        <label
          className="label-text address2-field"
          htmlFor="f1f1"
          id="f1f1-label"
        >
          Address 2
        </label>
        <input
          className="input-text address2-field"
          data-fieldName="address2"
          id="f1f1"
          maxLength={undefined}
          name="address.address2"
          onChange={[Function]}
          required={undefined}
          size={20}
          type="text"
          value=""
        />
        <div
          className="validation-list"
        >
          <div />
        </div>
      </div>
      <div
        className="input-box-field-container contain-text city-field"
      >
        <label
          className="label-text city-field"
          htmlFor="f1f2"
          id="f1f2-label"
        >
          City
        </label>
        <input
          className="input-text city-field"
          data-fieldName="city"
          id="f1f2"
          maxLength={undefined}
          name="address.city"
          onChange={[Function]}
          required={undefined}
          size={20}
          type="text"
          value=""
        />
        <div
          className="validation-list"
        >
          <div />
        </div>
      </div>
      <div
        className="input-box-field-container contain-text state-field"
      >
        <label
          className="label-text state-field"
          htmlFor="f1f3"
          id="f1f3-label"
        >
          State
        </label>
        <input
          className="input-text state-field"
          data-fieldName="state"
          id="f1f3"
          maxLength={2}
          name="address.state"
          onChange={[Function]}
          required={undefined}
          size={2}
          type="text"
          value=""
        />
        <div
          className="validation-list"
        >
          <div />
        </div>
      </div>
      <div
        className="input-box-field-container contain-text zip-field"
      >
        <label
          className="label-text zip-field"
          htmlFor="f1f4"
          id="f1f4-label"
        >
          Zip
        </label>
        <input
          className="input-text zip-field"
          data-fieldName="zip"
          id="f1f4"
          maxLength={undefined}
          name="address.zip"
          onChange={[Function]}
          required={undefined}
          size={20}
          type="text"
          value=""
        />
        <div
          className="validation-list"
        >
          <div />
        </div>
      </div>
    </div>
    <div
      className="validation-list"
    >
      <div />
    </div>
  </fieldset>
  <div />
  <div
    className="input-box-field-container contain-DateTime contain-date datePutOnSale-field"
  >
    <label
      className="label-DateTime label-date datePutOnSale-field"
      htmlFor="f3"
      id="f3-label"
    >
      Date Put On Sale
    </label>
    <input
      className="input-DateTime input-date datePutOnSale-field"
      data-fieldName="datePutOnSale"
      id="f3"
      max={undefined}
      min={undefined}
      name="datePutOnSale"
      onChange={[Function]}
      required={undefined}
      type="date"
      value=""
    />
    <div
      className="validation-list"
    >
      <div />
    </div>
  </div>
  <div
    className="input-box-field-container contain-Numeric contain-Integer numberOfBedRooms-field"
  >
    <label
      className="label-Numeric label-Integer numberOfBedRooms-field"
      htmlFor="f4"
      id="f4-label"
    >
      Bed Rooms
    </label>
    <input
      className="input-Numeric input-Integer numberOfBedRooms-field"
      data-fieldName="numberOfBedRooms"
      id="f4"
      max={undefined}
      min="0"
      name="numberOfBedRooms"
      onChange={[Function]}
      required={undefined}
      step={1}
      type="number"
      value=""
    />
    <div
      className="validation-list"
    >
      <div />
    </div>
  </div>
</div>
`;

exports[`RecordEditor renders correctly with fully filled data 1`] = `
<div
  className="edit-Record edit-Home undefined-field"
>
  <fieldset
    className="field-set-field-container contain-Record contain-Person owners-field"
  >
    <legend
      className="label-Record label-Person owners-field"
      id="f0-label"
    >
      Owners
    </legend>
    <div
      className="data-grid edit-Record edit-Person owners-field"
    >
      <div
        className="data-grid-buttons"
      />
      <table>
        <thead>
          <tr>
            <th>
              Full Name
            </th>
            <th>
              Phone Number
            </th>
            <th>
              <button
                className=""
                onClick={[Function]}
                type="button"
              >
                Add 
                Person
              </button>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>
              <input
                className="input-text fullName-field"
                data-fieldName="fullName"
                id="f0f0r0"
                maxLength={undefined}
                name="owners.0.fullName"
                onChange={[Function]}
                required={undefined}
                size={20}
                type="text"
                value="Jane Doe"
              />
            </td>
            <td>
              <input
                className="input-text input-tel phone-field"
                data-fieldName="phone"
                id="f0f1r0"
                maxLength={undefined}
                name="owners.0.phone"
                onChange={[Function]}
                required={undefined}
                size={20}
                type="tel"
                value=""
              />
            </td>
            <td>
              <span
                className="button-group"
              >
                <button
                  buttonStyle={undefined}
                  className="row-action-button"
                  onClick={[Function]}
                  type="button"
                >
                  Edit
                </button>
                <span
                  className="button-separator"
                />
                <button
                  buttonStyle={undefined}
                  className="row-action-button"
                  onClick={[Function]}
                  type="button"
                >
                  Remove
                </button>
              </span>
            </td>
          </tr>
        </tbody>
        <tfoot>
          <tr>
            <th />
            <th />
            <th>
              <button
                className=""
                onClick={[Function]}
                type="button"
              >
                Add 
                Person
              </button>
            </th>
          </tr>
        </tfoot>
      </table>
    </div>
    <div
      className="validation-list"
    >
      <div />
    </div>
  </fieldset>
  <fieldset
    className="field-set-field-container contain-Record contain-Address address-field"
  >
    <legend
      className="label-Record label-Address address-field"
      id="f1-label"
    >
      Address
    </legend>
    <div
      className="edit-Record edit-Address address-field"
    >
      <div
        className="input-box-field-container contain-text address1-field"
      >
        <label
          className="label-text address1-field"
          htmlFor="f1f0"
          id="f1f0-label"
        >
          Address 1
        </label>
        <input
          className="input-text address1-field"
          data-fieldName="address1"
          id="f1f0"
          maxLength={undefined}
          name="address.address1"
          onChange={[Function]}
          required={undefined}
          size={20}
          type="text"
          value="123 My Place"
        />
        <div
          className="validation-list"
        >
          <div />
        </div>
      </div>
      <div
        className="input-box-field-container contain-text address2-field"
      >
        <label
          className="label-text address2-field"
          htmlFor="f1f1"
          id="f1f1-label"
        >
          Address 2
        </label>
        <input
          className="input-text address2-field"
          data-fieldName="address2"
          id="f1f1"
          maxLength={undefined}
          name="address.address2"
          onChange={[Function]}
          required={undefined}
          size={20}
          type="text"
          value=""
        />
        <div
          className="validation-list"
        >
          <div />
        </div>
      </div>
      <div
        className="input-box-field-container contain-text city-field"
      >
        <label
          className="label-text city-field"
          htmlFor="f1f2"
          id="f1f2-label"
        >
          City
        </label>
        <input
          className="input-text city-field"
          data-fieldName="city"
          id="f1f2"
          maxLength={undefined}
          name="address.city"
          onChange={[Function]}
          required={undefined}
          size={20}
          type="text"
          value="Pittsburgh"
        />
        <div
          className="validation-list"
        >
          <div />
        </div>
      </div>
      <div
        className="input-box-field-container contain-text state-field"
      >
        <label
          className="label-text state-field"
          htmlFor="f1f3"
          id="f1f3-label"
        >
          State
        </label>
        <input
          className="input-text state-field"
          data-fieldName="state"
          id="f1f3"
          maxLength={2}
          name="address.state"
          onChange={[Function]}
          required={undefined}
          size={2}
          type="text"
          value="PA"
        />
        <div
          className="validation-list"
        >
          <div />
        </div>
      </div>
      <div
        className="input-box-field-container contain-text zip-field"
      >
        <label
          className="label-text zip-field"
          htmlFor="f1f4"
          id="f1f4-label"
        >
          Zip
        </label>
        <input
          className="input-text zip-field"
          data-fieldName="zip"
          id="f1f4"
          maxLength={undefined}
          name="address.zip"
          onChange={[Function]}
          required={undefined}
          size={20}
          type="text"
          value="15224"
        />
        <div
          className="validation-list"
        >
          <div />
        </div>
      </div>
    </div>
    <div
      className="validation-list"
    >
      <div />
    </div>
  </fieldset>
  <div />
  <div
    className="input-box-field-container contain-DateTime contain-date datePutOnSale-field"
  >
    <label
      className="label-DateTime label-date datePutOnSale-field"
      htmlFor="f3"
      id="f3-label"
    >
      Date Put On Sale
    </label>
    <input
      className="input-DateTime input-date datePutOnSale-field"
      data-fieldName="datePutOnSale"
      id="f3"
      max={undefined}
      min={undefined}
      name="datePutOnSale"
      onChange={[Function]}
      required={undefined}
      type="date"
      value="03/30/2018"
    />
    <div
      className="validation-list"
    >
      <div />
    </div>
  </div>
  <div
    className="input-box-field-container contain-Numeric contain-Integer numberOfBedRooms-field"
  >
    <label
      className="label-Numeric label-Integer numberOfBedRooms-field"
      htmlFor="f4"
      id="f4-label"
    >
      Bed Rooms
    </label>
    <input
      className="input-Numeric input-Integer numberOfBedRooms-field"
      data-fieldName="numberOfBedRooms"
      id="f4"
      max={undefined}
      min="0"
      name="numberOfBedRooms"
      onChange={[Function]}
      required={undefined}
      step={1}
      type="number"
      value="2"
    />
    <div
      className="validation-list"
    >
      <div />
    </div>
  </div>
</div>
`;
